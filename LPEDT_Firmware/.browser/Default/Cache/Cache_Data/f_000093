{"availableCount":271,"searchTerms":[],"userState":"49ff6e53-4f66-4a40-808d-e91adbd4b87b","resources":[{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth - NCP_asset:..com.silabs.sdk.stack.super_4.4.0.app.bluetooth.demos.bt_ncp.bt_ncp-brd4104a.s37","text":"Bluetooth - NCP","priority":0,"category":"DEMOS","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_ncp.example/bt_ncp/bt_ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_ncp_host/readme.md"],"description":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_ncp_host.example/bt_ncp_host/bt_ncp_host.slcp","text":"Bluetooth - NCP Host","priority":9999999,"category":"SOFTWARE","toolTipText":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rcp.example/bt_rcp/bt_rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rcp_cpc.example/bt_rcp/bt_rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth - SoC Blinky_asset:..com.silabs.sdk.stack.super_4.4.0.app.bluetooth.demos.bt_soc_blinky.bt_soc_blinky-brd4104a.s37","text":"Bluetooth - SoC Blinky","priority":0,"category":"DEMOS","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_blinky.example/bt_soc_blinky/bt_soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_dtm/readme.md"],"description":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_dtm.example/bt_soc_dtm/bt_soc_dtm.slcp","text":"Bluetooth - SoC DTM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_empty.example/bt_soc_empty/bt_soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_iop_test_display.example/bt_soc_iop_test/bt_soc_iop_test_display.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth - SoC Thermometer_asset:..com.silabs.sdk.stack.super_4.4.0.app.bluetooth.demos.bt_soc_thermometer.bt_soc_thermometer-brd4104a.s37","text":"Bluetooth - SoC Thermometer","priority":0,"category":"DEMOS","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_thermometer.example/bt_soc_thermometer/bt_soc_thermometer.slcp","text":"Bluetooth - SoC Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_thermometer_client.example/bt_soc_thermometer_client/bt_soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_thermometer_freertos.example/bt_soc_thermometer/bt_soc_thermometer_freertos.slcp","text":"Bluetooth - SoC Thermometer FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_thermometer_micriumos.example/bt_soc_thermometer/bt_soc_thermometer_micriumos.slcp","text":"Bluetooth - SoC Thermometer Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth - SoC Throughput (with display)_asset:..com.silabs.sdk.stack.super_4.4.0.app.bluetooth.demos.bt_soc_throughput_display.bt_soc_throughput_display-brd4104a.s37","text":"Bluetooth - SoC Throughput (with display)","priority":0,"category":"DEMOS","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_throughput_display.example/bt_soc_throughput/bt_soc_throughput_display.slcp","text":"Bluetooth - SoC Throughput (with display)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth - SoC iBeacon_asset:..com.silabs.sdk.stack.super_4.4.0.app.bluetooth.demos.bt_soc_ibeacon.bt_soc_ibeacon-brd4104a.s37","text":"Bluetooth - SoC iBeacon","priority":0,"category":"DEMOS","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_soc_ibeacon.example/bt_soc_ibeacon/bt_soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NCP Empty_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_ncp_empty.btmesh_ncp_empty-brd4104a.s37","text":"Bluetooth Mesh - NCP Empty","priority":0,"category":"DEMOS","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_ncp_empty.example/btmesh_ncp_empty/btmesh_ncp_empty.slcp","text":"Bluetooth Mesh - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"An NCP Target C application that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Ambient Light Sensor (Mock)_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_sensor_ambient_light.btmesh_soc_nlc_sensor_ambient_light-brd4104a.s37","text":"Bluetooth Mesh - NLC Ambient Light Sensor (Mock)","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_sensor_ambient_light.example/btmesh_soc_nlc_sensor_ambient_light/btmesh_soc_nlc_sensor_ambient_light_mock_display.slcp","text":"Bluetooth Mesh - NLC Ambient Light Sensor (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the LEDs and display on the WSTK.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Basic Lightness Controller_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_basic_lightness_controller.btmesh_soc_nlc_basic_lightness_controller-brd4104a.s37","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the LEDs and display on the WSTK.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_lightness_controller/readme.md"],"description":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes. This project uses the LEDs and display on the WSTK.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_basic_lightness_controller.example/btmesh_soc_nlc_basic_lightness_controller/btmesh_soc_nlc_basic_lightness_controller_display.slcp","text":"Bluetooth Mesh - NLC Basic Lightness Controller","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the device acts as a Basic Lightness controller in a Networked Lighting Control (NLC) system. The device listens to messages from other NLC devices, namely Occupancy Sensor, Ambient Light Sensor, Dimming Control and Basic Scene Selector nodes.\nThis project uses the LEDs and display on the WSTK.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Basic Scene Selector_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector.btmesh_soc_nlc_basic_scene_selector-brd4104a.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_basic_scene_selector.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_display.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Basic Scene Selector Low Power_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_basic_scene_selector_low_power.btmesh_soc_nlc_basic_scene_selector_low_power-brd4104a.s37","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_basic_scene_selector_low_power.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_low_power.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Dimming Control_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_dimming_control.btmesh_soc_nlc_dimming_control-brd4104a.s37","text":"Bluetooth Mesh - NLC Dimming Control","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_dimming_control.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_display.slcp","text":"Bluetooth Mesh - NLC Dimming Control","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Dimming Control Low Power_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_dimming_control_low_power.btmesh_soc_nlc_dimming_control_low_power-brd4104a.s37","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_dimming_control_low_power.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_low_power.slcp","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - NLC Occupancy Sensor_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_nlc_sensor_occupancy.btmesh_soc_nlc_sensor_occupancy-brd4104a.s37","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_nlc_sensor_occupancy.example/btmesh_soc_nlc_sensor_occupancy/btmesh_soc_nlc_sensor_occupancy_display.slcp","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_empty/readme.md"],"description":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_empty.example/btmesh_soc_empty/btmesh_soc_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":[],"description":"Friend example for IOP test. This node acts as a friend for the low power node and caches messages sent to it when the low power node is sleeping.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC IOP Test - Friend node_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_iop_friend.btmesh_soc_iop_friend-brd4104a.s37","text":"Bluetooth Mesh - SoC IOP Test - Friend node","priority":0,"category":"DEMOS","toolTipText":"Friend example for IOP test. This node acts as a friend for the low power node and caches messages sent to it when the low power node is sleeping.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":[],"description":"Low power node example for IOP test. This node acts as a typical low power device and sleeps most of the time. It needs a friend node to cache messages and forward them when polled.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC IOP Test - LPN node_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_iop_lpn.btmesh_soc_iop_lpn-brd4104a.s37","text":"Bluetooth Mesh - SoC IOP Test - LPN node","priority":0,"category":"DEMOS","toolTipText":"Low power node example for IOP test. This node acts as a typical low power device and sleeps most of the time. It needs a friend node to cache messages and forward them when polled.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":[],"description":"Proxy example for IOP test. This node forwards/relays messages between GATT and advertising bearers in the network.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC IOP Test - Proxy node_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_iop_proxy.btmesh_soc_iop_proxy-brd4104a.s37","text":"Bluetooth Mesh - SoC IOP Test - Proxy node","priority":0,"category":"DEMOS","toolTipText":"Proxy example for IOP test. This node forwards/relays messages between GATT and advertising bearers in the network.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":[],"description":"Relay example for IOP test. This node acts as a relay, i.e. if a node is out of range for another node, it relays messages between the two, provided the relay node is in range for both.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC IOP Test - Relay node_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_iop_relay.btmesh_soc_iop_relay-brd4104a.s37","text":"Bluetooth Mesh - SoC IOP Test - Relay node","priority":0,"category":"DEMOS","toolTipText":"Relay example for IOP test. This node acts as a relay, i.e. if a node is out of range for another node, it relays messages between the two, provided the relay node is in range for both.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Light CTL_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_light_ctl.btmesh_soc_light_ctl-brd4104a.s37","text":"Bluetooth Mesh - SoC Light CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_light_ctl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_light_ctl.example/btmesh_soc_light_ctl/btmesh_soc_light_ctl_display.slcp","text":"Bluetooth Mesh - SoC Light CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the WSTK can be switched on and off, and their lighting intensity, color temperature, and delta UV can be set.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Light HSL_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_light_hsl.btmesh_soc_light_hsl-brd4104a.s37","text":"Bluetooth Mesh - SoC Light HSL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_light_hsl/readme.md"],"description":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_light_hsl.example/btmesh_soc_light_hsl/btmesh_soc_light_hsl_display.slcp","text":"Bluetooth Mesh - SoC Light HSL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box software demo where the LEDs of the mainboard can be switched on and off, and their lighting intensity, hue, and saturation can be set. The example also tries to establish friendship as a Friend node.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":[],"description":"An out-of-the-box software demo which can provision and configure nearby switch devices. The LEDs of the mainboard can be switched on and off and their lighting intensity can be set either by push buttons or by the provisioned switches.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Provisioner Light Lightness_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_provisioner_light_lightness.btmesh_soc_provisioner_light_lightness-brd4104a.s37","text":"Bluetooth Mesh - SoC Provisioner Light Lightness","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box software demo which can provision and configure nearby switch devices.\nThe LEDs of the mainboard can be switched on and off and their lighting intensity can be set either by push buttons or by the provisioned switches.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Sensor Client_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_sensor_client.btmesh_soc_sensor_client-brd4104a.s37","text":"Bluetooth Mesh - SoC Sensor Client","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_sensor_client.example/btmesh_soc_sensor_client/btmesh_soc_sensor_client_display.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Sensor Thermometer_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_sensor_thermometer.btmesh_soc_sensor_thermometer-brd4104a.s37","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":0,"category":"DEMOS","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_sensor_thermometer.example/btmesh_soc_sensor_thermometer/btmesh_soc_sensor_thermometer_display.slcp","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Switch CTL_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_switch_ctl.btmesh_soc_switch_ctl-brd4104a.s37","text":"Bluetooth Mesh - SoC Switch CTL","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_switch_ctl.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_display.slcp","text":"Bluetooth Mesh - SoC Switch CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Bluetooth Mesh - SoC Switch CTL Low Power_asset:..com.silabs.sdk.stack.super_4.4.0.app.btmesh.demos.btmesh_soc_switch_ctl_low_power.btmesh_soc_switch_ctl_low_power-brd4104a.s37","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":0,"category":"DEMOS","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.btmesh_soc_switch_ctl_low_power.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_low_power.slcp","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_empty/readme.md"],"description":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_empty_freertos.example/bt_rail_dmp_soc_empty/bt_rail_dmp_soc_empty_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Empty FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_empty/readme.md"],"description":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_empty_micriumos.example/bt_rail_dmp_soc_empty/bt_rail_dmp_soc_empty_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, used as a starting point for custom Bluetooth + Proprietary DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_empty_std_freertos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of FreeRTOS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_empty_std/readme.md"],"description":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_empty_std_micriumos.example/bt_rail_dmp_soc_empty_std/bt_rail_dmp_soc_empty_std_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Empty Standard Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure used as a starting point for custom Bluetooth + Standard DMP (Dynamic Multiprotocol) applications. It runs on top of Micrium OS and multiprotocol RAIL utilizing IEEE 802.15.4 standard protocol.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_light/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a Proprietary protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_light_freertos.example/bt_rail_dmp_soc_light/bt_rail_dmp_soc_light_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Light FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a Proprietary protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch sample app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_light/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a Proprietary protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_light_micriumos.example/bt_rail_dmp_soc_light/bt_rail_dmp_soc_light_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Light Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a Proprietary protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch sample app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_light_std/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_light_std_freertos.example/bt_rail_dmp_soc_light_std/bt_rail_dmp_soc_light_std_freertos.slcp","text":"Bluetooth RAIL DMP - SoC Light Standard FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/bluetooth/example/bt_rail_dmp_soc_light_std/readme.md"],"description":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bt_rail_dmp_soc_light_std_micriumos.example/bt_rail_dmp_soc_light_std/bt_rail_dmp_soc_light_std_micriumos.slcp","text":"Bluetooth RAIL DMP - SoC Light Standard Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a Dynamic Multiprotocol reference application demonstrating a light bulb that can be switched both via Bluetooth and via a standard protocol. Can be tested with the EFR Connect mobile app and Flex (RAIL) Switch Standards sample app.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-uart-bgapi/readme.md"],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-uart-bgapi.sample-apps/Series-1/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"Bootloader - NCP BGAPI UART DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-spi-ezsp/readme.md"],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-spi-ezsp.sample-apps/Series-1/bootloader-spi-ezsp/bootloader-spi-ezsp.slcp","text":"Bootloader - NCP EZSP SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-uart-xmodem/readme.md"],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-uart-xmodem.sample-apps/Series-1/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"Bootloader - NCP UART XMODEM","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-ble/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x21800 (or 0x8021800 for device with 0x8000000 flash base), and have a size of 86 kB. This can be configured on the \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\".","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-internal-ble.sample-apps/Series-1/bootloader-storage-internal-ble/bootloader-storage-internal-ble.slcp","text":"Bootloader - SoC Bluetooth in-place OTA DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x21800 (or 0x8021800 for device with 0x8000000 flash base), and have a size of 86 kB. This can be configured on the \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\".\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-352k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-internal-single-352k.sample-apps/Series-1/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Bootloader - SoC Internal Storage (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-internal-single-512k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-internal-single-512k.sample-apps/Series-1/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Bootloader - SoC Internal Storage (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-spiflash.sample-apps/Series-1/bootloader-storage-spiflash/bootloader-storage-spiflash.slcp","text":"Bootloader - SoC SPI Flash Storage (multiple images)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-single-1024k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-spiflash-single-1024k.sample-apps/Series-1/bootloader-storage-spiflash-single-1024k/bootloader-storage-spiflash-single-1024k.slcp","text":"Bootloader - SoC SPI Flash Storage (single image with slot size of 1024kB)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-spiflash-single.sample-apps/Series-1/bootloader-storage-spiflash-single/bootloader-storage-spiflash-single.slcp","text":"Bootloader - SoC SPI Flash Storage (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/platform/bootloader/sample-apps/Series-1/bootloader-storage-spiflash-sfdp-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.bootloader-storage-spiflash-sfdp-single.sample-apps/Series-1/bootloader-storage-spiflash-sfdp-single/bootloader-storage-spiflash-sfdp-single.slcp","text":"Bootloader - SoC SPI Flash Storage using SFDP (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_soc_direct_mode_device/readme.md"],"description":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_direct_mode_device.example/connect/connect_soc_direct_mode_device/connect_soc_direct_mode_device.slcp","text":"Connect - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_soc_ecdh_key_exchange/readme.md"],"description":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol).","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_ecdh_key_exchange.example/connect/connect_soc_ecdh_key_exchange/connect_soc_ecdh_key_exchange.slcp","text":"Connect - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol)."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_soc_empty/readme.md"],"description":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_empty.example/connect/connect_soc_empty/connect_soc_empty.slcp","text":"Connect - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_soc_mac_mode_device/readme.md"],"description":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_mac_mode_device.example/connect/connect_soc_mac_mode_device/connect_soc_mac_mode_device.slcp","text":"Connect - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_sensor.example/connect/sensor_sink/connect_soc_sensor/connect_soc_sensor.slcp","text":"Connect - SoC Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_sink.example/connect/sensor_sink/connect_soc_sink/connect_soc_sink.slcp","text":"Connect - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_dmp_light_switch/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect Light DMP sample application it creates a basic switch functionality, where the LEDs can be toggled in the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_soc_switch.example/connect/light_switch/connect_soc_switch/connect_soc_switch.slcp","text":"Connect - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect Light DMP sample application it creates a basic switch functionality, where the LEDs can be toggled in the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_bt_dmp_soc_empty/readme.md"],"description":"The Connect Empty DMP example is an RTOS-based project that provides a skeleton for Connect but not functions, beside a BLE Task with a basic CLI interface.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_bt_dmp_soc_empty.example/connect/connect_bt_dmp_soc_empty/connect_bt_dmp_soc_empty.slcp","text":"Connect Bluetooth DMP - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty DMP example is an RTOS-based project that provides a skeleton for Connect but not functions, beside a BLE Task with a basic CLI interface."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/connect/connect_dmp_light_switch/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect-Switch sample application, it creates a basic light functionality, where the LEDs can be toggled on the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.connect_bt_dmp_soc_light.example/connect/light_switch/connect_bt_dmp_soc_light/connect_bt_dmp_soc_light.slcp","text":"Connect Bluetooth DMP - SoC Light","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK. In combination with the Connect-Switch sample application, it creates a basic light functionality, where the LEDs can be toggled on the Light node. After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command. After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/ml_blink/readme.md"],"description":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.ml_blink.example/ml_blink/ml_blink.slcp","text":"Machine Learning - Blink","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED. \n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/ml_model_profiler/readme.md"],"description":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.ml_model_profiler.example/ml_model_profiler/ml_model_profiler.slcp","text":"Machine Learning - Model Profiler","priority":9999999,"category":"SOFTWARE","toolTipText":"This application profiles a ML model. The ML model is loaded as a byte array which is generated from a Tensorflow tflite model file. Profiling is performed by running one inference with the model.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loo...","id":"projectTemplate.compatibleSDK.series1/usart/async_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_async_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13 Async Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loo..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.","id":"projectTemplate.compatibleSDK.series1/usart/async_polled/SimplicityStudio/BRD4104A_EFR32BG13_async_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 Async Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0.","id":"projectTemplate.compatibleSDK.series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4104A_EFR32BG13_gpio_prs_ldma_usart.slsproj","text":"Platform - BRD4104A EFR32BG13 GPIO PRS LDMA USART","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active).","id":"projectTemplate.compatibleSDK.series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_hfrco_cal_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13 HFRCO CAL Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active).","id":"projectTemplate.compatibleSDK.series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4104A_EFR32BG13_hfrco_cal_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 HFRCO CAL Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started.","id":"projectTemplate.compatibleSDK.series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_lfrco_cal_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13 LFRCO CAL Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates calibration of the LFRCO against the HFXO.","id":"projectTemplate.compatibleSDK.series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4104A_EFR32BG13_lfrco_cal_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 LFRCO CAL Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates calibration of the LFRCO against the HFXO. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.","id":"projectTemplate.compatibleSDK.series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4104A_EFR32BG13_rtcc_alarm_set.slsproj","text":"Platform - BRD4104A EFR32BG13 RTCC Alarm Set","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates use of the RTCC to wake from EM4.","id":"projectTemplate.compatibleSDK.series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4104A_EFR32BG13_rtcc_wake_em4.slsproj","text":"Platform - BRD4104A EFR32BG13 RTCC Wake EM4","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates use of the RTCC to wake from EM4. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_dma_master/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Master DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0.","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma_prs_gpio.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Master DMA PRS GPIO","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that trigg...","id":"projectTemplate.compatibleSDK.series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma_prs_letimer.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Master DMA PRS LETIMER","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that trigg..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard impli...","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Master Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard impli..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_master_polled/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Master Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9.","id":"projectTemplate.compatibleSDK.series1/usart/spi_dma_slave/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_dma.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Slave DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implie...","id":"projectTemplate.compatibleSDK.series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Slave Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implie..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin.","id":"projectTemplate.compatibleSDK.series1/usart/spi_slave_polled/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 SPI Slave Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.","id":"projectTemplate.compatibleSDK.series1/gpio/switch_led_polled/SimplicityStudio/BRD4104A_EFR32BG13_switch_led_polled.slsproj","text":"Platform - BRD4104A EFR32BG13 Switch Led Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will t...","id":"projectTemplate.compatibleSDK.series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4104A_EFR32BG13_wdog.slsproj","text":"Platform - BRD4104A EFR32BG13 WDOG","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will t..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0.","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ACMP Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low.","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_pin_output/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_pin_output.slsproj","text":"Platform - BRD4104A EFR32BG13P ACMP Pin Output","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin).","id":"projectTemplate.compatibleSDK.series1/acmp/acmp_polled/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P ACMP Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array.","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_diff_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Scan Diff Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Scan Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY b...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_letimer_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Scan LETIMER Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY b..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_letimer_prs_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Scan LETIMER PRS DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global vari...","id":"projectTemplate.compatibleSDK.series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_prs_gpio_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Scan PRS GPIO DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global vari..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_diff_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single Diff Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_letimer_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single LETIMER Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal varia...","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_letimer_prs_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single LETIMER PRS DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal varia..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_prs_gpio_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single PRS GPIO DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable.","id":"projectTemplate.compatibleSDK.series1/adc/adc_single_polled/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P ADC Single Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_lfxo_em4_no_ret.slsproj","text":"Platform - BRD4104A EFR32BG13P CRYOTIMER LFXO EM4 No RET","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_lfxo_ret_em4exit.slsproj","text":"Platform - BRD4104A EFR32BG13P CRYOTIMER LFXO RET EM4EXIT","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_em123.slsproj","text":"Platform - BRD4104A EFR32BG13P CRYOTIMER ULFRCO EM123","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_em4_no_ret.slsproj","text":"Platform - BRD4104A EFR32BG13P CRYOTIMER ULFRCO EM4 No RET","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs.","id":"projectTemplate.compatibleSDK.series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_ret_em4exit.slsproj","text":"Platform - BRD4104A EFR32BG13P CRYOTIMER ULFRCO RET EM4EXIT","priority":9999999,"category":"SOFTWARE","toolTipText":"This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlockin...","id":"projectTemplate.compatibleSDK.series1/msc/debug_lock/SimplicityStudio/BRD4104A_EFR32BG13P_debug_lock.slsproj","text":"Platform - BRD4104A EFR32BG13P Debug Lock","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlockin..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapp...","id":"projectTemplate.compatibleSDK.series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4104A_EFR32BG13P_EM4_WakeUp.slsproj","text":"Platform - BRD4104A EFR32BG13P EM4 Wakeup","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapp..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on.","id":"projectTemplate.compatibleSDK.series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4104A_EFR32BG13P_emu_vmon_em4_wakeup.slsproj","text":"Platform - BRD4104A EFR32BG13P EMU VMON EM4 Wakeup","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-e...","id":"projectTemplate.compatibleSDK.series1/vmon/vmon_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_emu_vmon_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P EMU VMON Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-e..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1. Data is fed into the GPCRC via the LDMA. The size of the data array being fed into LDMA and GPCRC can be increased  depending on the application. The examp...","id":"projectTemplate.compatibleSDK.series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4104A_EFR32BG13P_gpcrc_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P GPCRC DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1. Data is fed into the GPCRC via the LDMA. The size of the data array being fed into LDMA and GPCRC can be increased  depending on the application. The examp..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software.","id":"projectTemplate.compatibleSDK.series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4104A_EFR32BG13P_gpcrc_software.slsproj","text":"Platform - BRD4104A EFR32BG13P GPCRC Software","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO.","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_periph/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_periph_bg13p.slsproj","text":"Platform - BRD4104A EFR32BG13P GPIO PERIPH BG13P","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a dela...","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_prs/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_prs_bg13p.slsproj","text":"Platform - BRD4104A EFR32BG13P GPIO PRS BG13P","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a dela..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can...","id":"projectTemplate.compatibleSDK.series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_slew_rate_bg13p.slsproj","text":"Platform - BRD4104A EFR32BG13P GPIO Slew Rate BG13P","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).","id":"projectTemplate.compatibleSDK.series1/i2c/i2c/SimplicityStudio/BRD4104A_EFR32BG13P_i2c.slsproj","text":"Platform - BRD4104A EFR32BG13P I2C","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example us...","id":"projectTemplate.compatibleSDK.series1/idac/idac_output_constant/SimplicityStudio/BRD4104A_EFR32BG13P_idac_output_constant.slsproj","text":"Platform - BRD4104A EFR32BG13P IDAC Output Constant","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example us..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1.","id":"projectTemplate.compatibleSDK.series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4104A_EFR32BG13P_idac_timer_dma_waveform.slsproj","text":"Platform - BRD4104A EFR32BG13P IDAC TIMER DMA Waveform","priority":9999999,"category":"SOFTWARE","toolTipText":"This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in ...","id":"projectTemplate.compatibleSDK.series1/idac/idac_timer_prs/SimplicityStudio/BRD4104A_EFR32BG13P_idac_timer_prs.slsproj","text":"Platform - BRD4104A EFR32BG13P IDAC TIMER PRS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as exp...","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_2d_copy.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA 2D Copy","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as exp..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_interchannel_synchronization.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Interchannel Synchronization","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_linked_list/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_linked_list.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Linked List","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_linked_list_looped.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Linked List Looped","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the \"pingBuffer\" array, then to the \"pongBuffer\", then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then...","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_ping_pong.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Ping Pong","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the \"pingBuffer\" array, then to the \"pongBuffer\", then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"Software requests an LDMA transfer on a linked list of 4 descriptors to \"scatter\" one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the \"scatter\".","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_scatter_gather.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Scatter Gather","priority":9999999,"category":"SOFTWARE","toolTipText":"Software requests an LDMA transfer on a linked list of 4 descriptors to \"scatter\" one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the \"scatter\". "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_button/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_button.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Single Button","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_looped/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_looped.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Single Looped","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software.","id":"projectTemplate.compatibleSDK.series1/ldma/ldma_single_software/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_software.slsproj","text":"Platform - BRD4104A EFR32BG13P LDMA Single Software","priority":9999999,"category":"SOFTWARE","toolTipText":"In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2.","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_dma/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P LEUART DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the...","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_echo/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_echo.slsproj","text":"Platform - BRD4104A EFR32BG13P LEUART Echo","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to c...","id":"projectTemplate.compatibleSDK.series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_half_duplex.slsproj","text":"Platform - BRD4104A EFR32BG13P LEUART Half Duplex","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to c..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT o...","id":"projectTemplate.compatibleSDK.series1/prs/logic_unit/SimplicityStudio/BRD4104A_EFR32BG13P_logic_unit.slsproj","text":"Platform - BRD4104A EFR32BG13P Logic Unit","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT o..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger","id":"projectTemplate.compatibleSDK.series1/msc/msc_rw/SimplicityStudio/BRD4104A_EFR32BG13P_msc_rw.slsproj","text":"Platform - BRD4104A EFR32BG13P MSC RW","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_cascaded_inverting.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Cascaded Inverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_cascaded_noninverting.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Cascaded Noninverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also con...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_dac_to_opamp.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP DAC To OPAMP","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also con..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps.","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_differential_three/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_differential_three.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Differential Three","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_differential_two/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_differential_two.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Differential Two","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation:","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_inverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_inverting.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Inverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1.","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_noninverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_noninverting.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Noninverting","priority":9999999,"category":"SOFTWARE","toolTipText":"This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also co...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_to_adc/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_to_adc.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP To ADC","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also co..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and d...","id":"projectTemplate.compatibleSDK.series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_unity_gain.slsproj","text":"Platform - BRD4104A EFR32BG13P OPAMP Unity Gain","priority":9999999,"category":"SOFTWARE","toolTipText":"This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and d..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high.","id":"projectTemplate.compatibleSDK.series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_one_shot_output_compare.slsproj","text":"Platform - BRD4104A EFR32BG13P One Shot Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction.","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_quadrature.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT EXTCLK Quadrature","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an ...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_single_overflow.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT EXTCLK Single Overflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of ...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_single_underflow.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT EXTCLK Single Underflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_single_oversampling_overflow.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT Single Oversampling Overflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_single_oversampling_underflow.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT Single Oversampling Underflow","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter l...","id":"projectTemplate.compatibleSDK.series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_trigger_compare_clear_prs.slsproj","text":"Platform - BRD4104A EFR32BG13P PCNT Trigger Compare Clear PRS","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter l..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency.","id":"projectTemplate.compatibleSDK.series1/letimer/pulse_train/SimplicityStudio/BRD4104A_EFR32BG13P_pulse_train.slsproj","text":"Platform - BRD4104A EFR32BG13P Pulse Train","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board.","id":"projectTemplate.compatibleSDK.series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4104A_EFR32BG13P_pulse_width_modulation.slsproj","text":"Platform - BRD4104A EFR32BG13P Pulse Width Modulation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 & PB1) and LEDs (LED0 & LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a spec...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_get_reset_cause.slsproj","text":"Platform - BRD4104A EFR32BG13P RMU Get Reset Cause","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 & PB1) and LEDs (LED0 & LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a spec..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended r...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_pin_reset_extended.slsproj","text":"Platform - BRD4104A EFR32BG13P RMU Pin Reset Extended","priority":9999999,"category":"SOFTWARE","toolTipText":"This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended r..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited...","id":"projectTemplate.compatibleSDK.series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_wdog_limited.slsproj","text":"Platform - BRD4104A EFR32BG13P RMU WDOG Limited","priority":9999999,"category":"SOFTWARE","toolTipText":"This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for P...","id":"projectTemplate.compatibleSDK.series1/servo/adjust/SimplicityStudio/BRD4104A_EFR32BG13P_servo_adjust.slsproj","text":"Platform - BRD4104A EFR32BG13P Servo Adjust","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for P..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to ...","id":"projectTemplate.compatibleSDK.series1/servo/sweep/SimplicityStudio/BRD4104A_EFR32BG13P_servo_sweep.slsproj","text":"Platform - BRD4104A EFR32BG13P Servo Sweep","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles L...","id":"projectTemplate.compatibleSDK.series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_switch_led_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P Switch Led Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles L..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal.","id":"projectTemplate.compatibleSDK.series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4104A_EFR32BG13P_timer_dma_edge_capture.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER DMA Edge Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired fr...","id":"projectTemplate.compatibleSDK.series1/timer/timer_frequency_generation/SimplicityStudio/BRD4104A_EFR32BG13P_timer_frequency_generation.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Frequency Generation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired fr..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_input_capture_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Input Capture Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The cap...","id":"projectTemplate.compatibleSDK.series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_input_capture_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Input Capture Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The cap..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events cle...","id":"projectTemplate.compatibleSDK.series1/timer/timer_pwm_dma/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pwm_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER PWM DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events cle..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin....","id":"projectTemplate.compatibleSDK.series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pwm_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER PWM Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin...."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_period_measurement_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Period Measurement Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared ...","id":"projectTemplate.compatibleSDK.series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_period_measurement_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Period Measurement Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connecte...","id":"projectTemplate.compatibleSDK.series1/timer/timer_pulse_capture/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pulse_capture.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Pulse Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connecte..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_edge_output_compare.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Single Edge Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an int...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Single Pulse Generation DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an int..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Single Pulse Generation Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse...","id":"projectTemplate.compatibleSDK.series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P TIMER Single Pulse Generation Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The f...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_continuous/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_continuous.slsproj","text":"Platform - BRD4104A EFR32BG13P VDAC Continuous","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The f..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_differential/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_differential.slsproj","text":"Platform - BRD4104A EFR32BG13P VDAC Differential","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for ...","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_sine_wave_synch.slsproj","text":"Platform - BRD4104A EFR32BG13P VDAC Sine Wave Synch","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3.","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_single/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_single.slsproj","text":"Platform - BRD4104A EFR32BG13P VDAC Single","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3.","id":"projectTemplate.compatibleSDK.series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_timer_dma_waveform.slsproj","text":"Platform - BRD4104A EFR32BG13P VDAC TIMER DMA Waveform","priority":9999999,"category":"SOFTWARE","toolTipText":"This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values.","id":"projectTemplate.compatibleSDK.series1/emu/voltage_scaling/SimplicityStudio/BRD4104A_EFR32BG13P_voltage_scaling.slsproj","text":"Platform - BRD4104A EFR32BG13P Voltage Scaling","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal.","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_dma_edge_capture.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER DMA Edge Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. "},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_frequency_generation.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Frequency Generation","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_input_capture_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Input Capture Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The ca...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_input_capture_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Input Capture Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The ca..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clea...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pwm_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER PWM DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clea..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pwm_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER PWM Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_period_measurement_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Period Measurement Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously ..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_period_measurement_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Period Measurement Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connect...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pulse_capture.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Pulse Capture","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connect..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be se...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_edge_output_compare.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Single Edge Output Compare","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be se..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interr...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_dma.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Single Pulse Generation DMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interr..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_interrupt.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Single Pulse Generation Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at e..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pu...","id":"projectTemplate.compatibleSDK.series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_polled.slsproj","text":"Platform - BRD4104A EFR32BG13P WTIMER Single Pulse Generation Polled","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pu..."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/blink_baremetal/readme.md"],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/blink_kernel_freertos/readme.md"],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/blink_kernel_micriumos/readme.md"],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/blink_pwm_baremetal/readme.md"],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cli_baremetal/readme.md"],"description":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cli_baremetal.example/cli_baremetal/cli_baremetal.slcp","text":"Platform - CLI Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cli_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cli_kernel_freertos.example/cli_kernel_freertos/cli_kernel_freertos.slcp","text":"Platform - CLI Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cli_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cli_kernel_micriumos.example/cli_kernel_micriumos/cli_kernel_micriumos.slcp","text":"Platform - CLI Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cpc_secondary_spi_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cpc_secondary_spi_security_device_recovery.example/cpc_secondary_spi_security_device_recovery/cpc_secondary_spi_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cpc_secondary_vcom_security_device_recovery/readme.md"],"description":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cpc_secondary_vcom_security_device_recovery.example/cpc_secondary_vcom_security_device_recovery/cpc_secondary_vcom_security_device_recovery.slcp","text":"Platform - CPC Secondary Device Recovery - VCOM","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project implements the function sl_cpc_security_on_unbind_request(), allowing the secondary device to be unbound from the host.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cpc_secondary_vcom_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cpc_secondary_vcom_micriumos.example/cpc_secondary_vcom_micriumos/cpc_secondary_vcom_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security disabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/cpc_secondary_vcom_security_micriumos/readme.md"],"description":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.cpc_secondary_vcom_security_micriumos.example/cpc_secondary_vcom_security_micriumos/cpc_secondary_vcom_security_micriumos.slcp","text":"Platform - CPC Secondary with Micrium OS and Security Enabled","priority":9999999,"category":"SOFTWARE","toolTipText":"This simple example project shows how to open user endpoints in a Micrium OS task with security enabled. By connecting a host running a CPCd instance to the secondary's VCOM port, the user can send data to the user endpoints, and verify that it is echoed back.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/dmadrv_baremetal/readme.md"],"description":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.dmadrv_baremetal.example/dmadrv_baremetal/dmadrv_baremetal.slcp","text":"Platform - DMADRV Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/emode_baremetal/readme.md"],"description":"Demo for energy mode current consumption testing.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.emode_baremetal.example/emode_baremetal/emode_baremetal.slcp","text":"Platform - Emode Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"Demo for energy mode current consumption testing.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/iostream_usart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/iostream_usart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/i2cspm_baremetal/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.i2cspm_baremetal.example/i2cspm_baremetal/i2cspm_baremetal.slcp","text":"Platform - I2C Simple Polled Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/i2cspm_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.i2cspm_kernel_freertos.example/i2cspm_kernel_freertos/i2cspm_kernel_freertos.slcp","text":"Platform - I2C Simple Polled Master on FreeRTOS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/i2cspm_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.i2cspm_kernel_micriumos.example/i2cspm_kernel_micriumos/i2cspm_kernel_micriumos.slcp","text":"Platform - I2C Simple Polled Master on Micrium OS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/memlcd_baremetal/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD) module in a baremetal application, using Silicon Labs Graphics Library (glib).","id":"com.silabs.sdk.stack.super:4.4.0._233561819_Platform - MEMLCD Bare-metal_asset:..com.silabs.sdk.stack.super_4.4.0.app.common.demos.memlcd_baremetal.memlcd_baremetal-brd4104a.s37","text":"Platform - MEMLCD Bare-metal","priority":0,"category":"DEMOS","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD)  module in a baremetal application, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/memlcd_baremetal/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD)  module in a baremetal application, using Silicon Labs Graphics Library (glib).","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.memlcd_baremetal.example/memlcd_baremetal/memlcd_baremetal.slcp","text":"Platform - MEMLCD Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD)  module in a baremetal application, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/memlcd_kernel_micriumos/readme.md"],"description":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD)  module in a Micrium OS kernel task, using Silicon Labs Graphics Library (glib).","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.memlcd_kernel_micriumos.example/memlcd_kernel_micriumos/memlcd_kernel_micriumos.slcp","text":"Platform - MEMLCD Kernel on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Memory Liquid Crystal Display (LCD)  module in a Micrium OS kernel task, using Silicon Labs Graphics Library (glib).\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/mpu_simple_baremetal/readme.md"],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/nvm3_baremetal/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/power_manager_baremetal/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a bare metal application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.power_manager_baremetal.example/power_manager_baremetal/power_manager_baremetal.slcp","text":"Platform - Power Manager Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a bare metal application.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/power_manager_kernel_micriumos/readme.md"],"description":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.power_manager_kernel_micriumos.example/power_manager_kernel_micriumos/power_manager_kernel_micriumos.slcp","text":"Platform - Power Manager Kernel with Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the Power Manager module in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/spidrv_master_baremetal/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/spidrv_master_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/spidrv_slave_baremetal/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/spidrv_slave_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/simple_button_baremetal/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/simple_button_kernel_micriumos/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/sleeptimer_baremetal/readme.md"],"description":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.sleeptimer_baremetal.example/sleeptimer_baremetal/sleeptimer_baremetal.slcp","text":"Platform - Sleeptimer Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates periodic and one-shot timers using the low-frequency real-time clock peripheral. Timers can be stopped and restarted using the buttons. Timer status is reported on the virtual COM serial port.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/sleeptimer_wallclock_baremetal/readme.md"],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/tempdrv_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.tempdrv_kernel_micriumos.example/tempdrv_kernel_micriumos/tempdrv_kernel_micriumos.slcp","text":"Platform - TEMPDRV on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/uartdrv_baremetal/readme.md"],"description":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.uartdrv_baremetal.example/uartdrv_baremetal/uartdrv_baremetal.slcp","text":"Platform - UARTDRV LEUART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a bare-metal configuration  to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/uartdrv_kernel_micriumos/readme.md"],"description":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.uartdrv_kernel_micriumos.example/uartdrv_kernel_micriumos/uartdrv_kernel_micriumos.slcp","text":"Platform - UARTDRV LEUART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the UARTDRV driver running in a Micrium OS task to demonstrate the use of LEUART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_aead/readme.md"],"description":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform Security - SoC PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_asymmetric_key/readme.md"],"description":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_cipher/readme.md"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform Security - SoC PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_dsa/readme.md"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform Security - SoC PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_ecdh/readme.md"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform Security - SoC PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_hash/readme.md"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform Security - SoC PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_kdf/readme.md"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform Security - SoC PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_mac/readme.md"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform Security - SoC PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_symmetric_key/readme.md"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/psa_crypto_x509/readme.md"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform Security - SoC PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/mbedtls_aescrypt/readme.md"],"description":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform Security - SoC mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/mbedtls_ecdh/readme.md"],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform Security - SoC mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/common/example/mbedtls_ecdsa/readme.md"],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform Security - SoC mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.\n"},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_spi.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_simple_trx_ncp_spi.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp_spi.slcp","text":"RAIL - NCP Simple TRX with CPC Support (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_vcom.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_simple_trx_ncp.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp.slcp","text":"RAIL - NCP Simple TRX with CPC Support (VCOM)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_burst_duty_cycle/readme.md"],"description":"The example sends a burst in Master Mode (sending a burst long enough to be received by a Slave) and listens in Duty Cycle mode in Slave mode. The app checks the time of the burst and tells the user if the Slave ON time is too short for reliable reception. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_burst_duty_cycle.example/rail/rail_soc_burst_duty_cycle/rail_soc_burst_duty_cycle.slcp","text":"RAIL - SoC Burst Duty Cycle","priority":9999999,"category":"SOFTWARE","toolTipText":"The example sends a burst in Master Mode (sending a burst long enough to be received by a Slave) and listens in Duty Cycle mode in Slave mode. The app checks the time of the burst and tells the user if the Slave ON time is too short for reliable reception. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_empty/readme.md"],"description":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_empty.example/rail/rail_soc_empty/rail_soc_empty.slcp","text":"RAIL - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_emode/readme.md"],"description":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_emode.example/rail/rail_soc_emode/rail_soc_emode.slcp","text":"RAIL - SoC Energy Mode","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_light/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards. In combination with the Switch sample application it creates a basic light functionality, where the light can be toggled in the Light node. After power up, the node is in ADVERTISE state. It means broadcast messages are sent periodically. After pushing PB1 button, the node is connected, and ready for toggling the light. This is called the READY state. If the Switch module has done the same procedure, light can be toggled from all the boards with pushing BP0 button.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_light.example/rail/rail_soc_light/rail_soc_light.slcp","text":"RAIL - SoC Light","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards. In combination with the Switch sample application it creates a basic light functionality, where the light can be toggled in the Light node. After power up, the node is in ADVERTISE state. It means broadcast messages are sent periodically. After pushing PB1 button, the node is connected, and ready for toggling the light. This is called the READY state. If the Switch module has done the same procedure, light can be toggled from all the boards with pushing BP0 button."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_long_preamble_duty_cycle/readme.md"],"description":"This Long Preamble Duty Cycle shows how 2 radios can communicate with as less energy used as possible. For this propose this sample app uses the Preamble detect function of the radio. The receiving radio is only in RX for the shortest time needed to detect any part of a preamble, if there was no preamble detection it goes back to EM1, sender radio send a longer preamble to be sure that the receiver will detect it. If there was a detection it will stay in RX mode and receive the packet. The sample app can be used for sending and receiving also, to send a packet press a button PB0 or PB1, when sent LED1 will be toggled and when received LED0 will be toggled. The statistic is printed on the screen of the LCD and the received packets data will be written out on the terminal. Sample app can be also managed through CLI, for more info send 'help' through terminal. The given PHY can be modified, but if it is modified check the duty_cycle_config.h file to maintain the correct settings for on and off time. Energy profiler should be used to look at energy consumption. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_long_preamble_duty_cycle.example/rail/rail_soc_long_preamble_duty_cycle/rail_soc_long_preamble_duty_cycle.slcp","text":"RAIL - SoC Long Preamble Duty Cycle","priority":9999999,"category":"SOFTWARE","toolTipText":"This Long Preamble Duty Cycle shows how 2 radios can communicate with as less energy used as possible. For this propose this sample app uses the Preamble detect function of the radio. The receiving radio is only in RX for the shortest time needed to detect any part of a preamble, if there was no preamble detection it goes back to EM1, sender radio send a longer preamble to be sure that the receiver will detect it. If there was a detection it will stay in RX mode and receive the packet. The sample app can be used for sending and receiving also, to send a packet press a button PB0 or PB1, when sent LED1 will be toggled and when received LED0 will be toggled. The statistic is printed on the screen of the LCD and the received packets data will be written out on the terminal. Sample app can be also managed through CLI, for more info send 'help' through terminal. The given PHY can be modified, but if it is modified check the duty_cycle_config.h file to maintain the correct settings for on and off time. Energy profiler should be used to look at energy consumption. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_railtest/readme.md"],"description":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_railtest.example/rail/rail_soc_railtest/rail_soc_railtest.slcp","text":"RAIL - SoC RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed on the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_range_test.example/rail/rail_soc_range_test/rail_soc_range_test.slcp","text":"RAIL - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed on the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_range_test_std.example/rail/rail_soc_range_test_std/rail_soc_range_test_std.slcp","text":"RAIL - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_simple_trx/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_simple_trx.example/rail/rail_soc_simple_trx/rail_soc_simple_trx.slcp","text":"RAIL - SoC Simple TRX","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_simple_trx_std/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_simple_trx_std.example/rail/rail_soc_simple_trx_std/rail_soc_simple_trx_std.slcp","text":"RAIL - SoC Simple TRX Standards","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_simple_trx_auto_ack/readme.md"],"description":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_simple_trx_auto_ack.example/rail/rail_soc_simple_trx_auto_ack/rail_soc_simple_trx_auto_ack.slcp","text":"RAIL - SoC Simple TRX with Auto-ACK","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_switch/readme.md"],"description":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards. In combination with the Light sample application it creates a basic switch functionality, where the light can be toggled in the Light node. After power up, the node is in SCAN state. It means the broadcast messages of the light modules can be captured. After pushing PB1 button, the closest Light module will be connected. This is called the LINK state. If the Light module has done the same procedure, light can be toggled from all the boards with pushing BP0 button.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_soc_switch.example/rail/rail_soc_switch/rail_soc_switch.slcp","text":"RAIL - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"The purpose of the application is to demonstrate a simple wireless communication between two or more boards. In combination with the Light sample application it creates a basic switch functionality, where the light can be toggled in the Light node. After power up, the node is in SCAN state. It means the broadcast messages of the light modules can be captured. After pushing PB1 button, the closest Light module will be connected. This is called the LINK state. If the Light module has done the same procedure, light can be toggled from all the boards with pushing BP0 button."},{"imageURL":"bundleentry://51.fwk1369807123/icons/run.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"com.silabs.sdk.stack.super:4.4.0._233561819_RAIL Bluetooth DMP - SoC Range Test_asset:..com.silabs.sdk.stack.super_4.4.0.app.flex.demos.rail_bt_dmp_soc_range_test.rail_bt_dmp_soc_range_test-brd4104a.s37","text":"RAIL Bluetooth DMP - SoC Range Test","priority":0,"category":"DEMOS","toolTipText":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_bt_dmp_soc_range_test.example/rail/rail_bt_dmp_soc_range_test/rail_bt_dmp_soc_range_test.slcp","text":"RAIL Bluetooth DMP - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"Range Test with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This is a customizable application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then the actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://450.fwk1369807123/icons/projectNew.svg","supportDocuments":["file:/C:/Users/vishn/SimplicityStudio/SDKs/gecko_sdk_2/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.0._233561819.rail_bt_dmp_soc_range_test_std.example/rail/rail_bt_dmp_soc_range_test_std/rail_bt_dmp_soc_range_test_std.slcp","text":"RAIL Bluetooth DMP - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"Range Test BLE and IEEE802.15.4 with Bluetooth connectivity. It runs on top of Micrium OS RTOS and multiprotocol RAIL. This application demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. The role can be selected in the LCD menu. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. A menu is displayed in the LCD, which allows the user to see the most important information about the settings and also change some of them. The left button navigates in the menu and the right button selects or changes options. The bottom line always shows what the buttons do in the particular context. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in the LCD menu, in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The LCD menu informs the user about the setpoint and the actual power. In the LCD menu, the Power item displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. Wireless Gecko mobile app can also be used to control this application over Bluetooth. Currently MicriumOS and FreeRTOS is supported by this sample app. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":32,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":34,"anySelected":false,"id":1,"filters":[],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":9,"anySelected":false,"id":2,"filters":[],"title":"Connect","parentId":0,"selected":false},{"futureCount":21,"anySelected":false,"id":3,"filters":[],"title":"RAIL","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"Host","parentId":1,"selected":false},{"futureCount":9,"anySelected":false,"id":1,"filters":[],"title":"NCP","parentId":1,"selected":false},{"futureCount":2,"anySelected":false,"id":2,"filters":[],"title":"RCP","parentId":1,"selected":false},{"futureCount":136,"anySelected":false,"id":3,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":51,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":2,"selected":false},{"futureCount":10,"anySelected":false,"id":1,"filters":[],"title":"Bootloader","parentId":2,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Machine Learning","parentId":3,"selected":false},{"futureCount":13,"anySelected":false,"id":1,"filters":[],"title":"Multiprotocol","parentId":3,"selected":false}],"title":"Capability","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":88,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":4,"selected":false},{"futureCount":60,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":4,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":121,"anySelected":false,"id":0,"filters":[],"title":"Evaluation","parentId":5,"selected":false},{"futureCount":5,"anySelected":false,"id":1,"filters":[],"title":"INTERNAL","parentId":5,"selected":false},{"futureCount":2,"anySelected":false,"id":2,"filters":[],"title":"None Specified","parentId":5,"selected":false},{"futureCount":143,"anySelected":false,"id":3,"filters":[],"title":"PRODUCTION","parentId":5,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":6,"filters":[{"futureCount":150,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v4.4.0","parentId":6,"selected":false},{"futureCount":121,"anySelected":false,"id":1,"filters":[],"title":"Peripheral Examples","parentId":6,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":271}
